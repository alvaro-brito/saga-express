name: saga-express
networks:
  saga_network:
    driver: bridge
volumes:
  redpanda-0: null
  postgres_data: null

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: saga-postgres
    environment:
      POSTGRES_USER: saga_user
      POSTGRES_PASSWORD: saga_password
      POSTGRES_DB: saga_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - saga_network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U saga_user -d saga_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redpanda (Kafka-compatible)
  redpanda-0:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      - --mode dev-container
      - --smp 1
      - --default-log-level=info
    image: docker.redpanda.com/redpandadata/redpanda:v24.3.9
    container_name: saga-redpanda
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    networks:
      - saga_network
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644

  # Redpanda Console
  console:
    container_name: saga-redpanda-console
    image: docker.redpanda.com/redpandadata/console:v2.8.5
    networks:
      - saga_network
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]
    ports:
      - 8080:8080
    depends_on:
      - redpanda-0

  # Saga Express Application
  saga-express:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: saga-express-app
    environment:
      DATABASE_URL: postgresql://saga_user:saga_password@postgres:5432/saga_db
      KAFKA_BOOTSTRAP_SERVERS: redpanda-0:9092
      DEBUG: "false"
    networks:
      - saga_network
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redpanda-0:
        condition: service_started
    command: >
      sh -c "
        alembic upgrade head &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000
      "

  # Mock Services for Testing
  mock-order-service:
    build:
      context: ./mock_services
      dockerfile: Dockerfile.order
    container_name: mock-order-service
    networks:
      - saga_network
    ports:
      - "8001:8000"

  mock-inventory-service:
    build:
      context: ./mock_services
      dockerfile: Dockerfile.inventory
    container_name: mock-inventory-service
    networks:
      - saga_network
    ports:
      - "8002:8000"

  mock-payment-service:
    build:
      context: ./mock_services
      dockerfile: Dockerfile.payment
    container_name: mock-payment-service
    networks:
      - saga_network
    ports:
      - "8003:8000"
